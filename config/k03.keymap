#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&slash>;

            tapping-term-ms = <300>;
        };

        td2: td2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LS(LA(LEFT_BRACKET))>, <&kp LS(LA(H))>;
        };

        td3: td3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD3";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(RIGHT_BRACKET))>, <&kp LS(LA(L))>;

            tapping-term-ms = <300>;
        };

        td4: td4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD4";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LC(SLASH)>;

            tapping-term-ms = <300>;
        };
    };

    macros {
        en_dot: en_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_ALT)>, <&macro_wait_time 25>, <&kp DOT>;

            label = "EN_DOT";
        };

        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N8))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N9))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        een: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };

        slash: slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to_en>,
                <&macro_wait_time 10>,
                <&kp LC(FSLH)>,
                <&macro_wait_time 10>,
                <&to_ru>;

            label = "SLASH";
        };
    };

    combos {
        compatible = "zmk,combos";

        ent {
            bindings = <&kp ENTER>;
            key-positions = <31 32>;
            layers = <4>;
        };

        bspac {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 33>;
            layers = <4>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <46 47>;
            layers = <4>;
        };

        all {
            bindings = <&kp LC(A)>;
            key-positions = <25 26>;
            layers = <2 3>;
        };

        x {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <40 41>;
            layers = <0 1>;
        };

        left_br {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 45>;
            layers = <0 1>;
        };

        e {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
            layers = <0 1>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <13 14>;
            layers = <2 3>;
        };

        flow {
            bindings = <&kp LS(LA(LC(LG(F))))>;
            key-positions = <29 28>;
            layers = <2 3>;
        };

        ctrT {
            bindings = <&kp LC(T)>;
            key-positions = <17 16>;
            layers = <2 3>;
        };

        buffer {
            bindings = <&kp LA(LC(LG(T)))>;
            key-positions = <39 40>;
            layers = <2 3>;
        };

        compact {
            bindings = <&kp LA(LC(C))>;
            key-positions = <37 38>;
            layers = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            bindings = <
&kp GRAVE         &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                               &kp N6  &kp N7     &kp N8     &kp N9   &kp N0      &none
&kp TAB           &kp Q   &kp W   &kp E         &kp R         &kp T                                &kp Y   &kp U      &kp I      &kp O    &kp P       &to 9
&kp LEFT_SHIFT    &kp A   &kp S   &kp D         &kp F         &kp G                                &kp H   &kp J      &kp K      &kp L    &lt 8 SEMI  &none
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C         &kp V         &kp B   &kp LBKT       &kp C_MUTE    &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH    &none
                          &none   &kp LEFT_WIN  &kp LEFT_ALT  &mo 2   &lt 7 SPACE    &lt 11 ENTER  &mo 4   &layer_ru  &none      &mo 5
            >;

            display-name = "EN";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;

            label = "EN";
        };

        RU {
            display-name = "RU";
            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                            &kp N6  &kp N7     &kp N8     &kp N9   &kp N0      &none
&kp TAB     &kp Q   &kp W   &kp E         &kp R         &kp T                             &kp Y   &kp U      &kp I      &kp O    &kp P       &to 9
&kp LSHIFT  &kp A   &kp S   &kp D         &kp F         &kp G                             &kp H   &kp J      &kp K      &kp L    &lt 8 SEMI  &none
&kp LCTRL   &kp Z   &kp X   &kp C         &kp V         &kp B   &kp LBKT       &kp RBKT   &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH    &none
                    &none   &kp LEFT_WIN  &kp LEFT_ALT  &mo 3   &lt 7 SPACE    &kp ENTER  &mo 4   &layer_en  &none      &none
            >;

            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;

            label = "RU";
        };

        en_sy {
            bindings = <
&trans  &trans                &trans        &trans         &trans        &none                         &trans         &trans         &trans     &trans       &trans  &trans
&trans  &kp LEFT_BRACE        &td4          &kp EQUAL      &kp LS(PLUS)  &kp SQT                       &kp LS(COLON)  &kp LS(QMARK)  &kp GRAVE  &kp LS(DQT)  &trans  &trans
&trans  &kp LEFT_PARENTHESIS  &kp LS(LT)    &kp LS(UNDER)  &kp LS(GT)    &kp COMMA                     &kp SEMI       &kp DOT        &kp COMMA  &trans       &trans  &trans
&trans  &kp LEFT_BRACKET      &kp LS(STAR)  &kp FSLH       &kp LS(AT)    &trans     &trans     &trans  &trans         &kp LS(EXCL)   &trans     &trans       &trans  &trans
                              &trans        &trans         &kp BSPC      &none      &kp RET    &trans  &trans         &trans         &trans     &trans
            >;

            label = "en_sy";
        };

        ru_sy {
            bindings = <
&trans  &trans             &trans        &trans         &trans        &none                          &trans          &trans          &trans      &trans        &trans  &trans
&trans  &een LEFT_BRACE    &td0          &kp EQUAL      &kp LS(PLUS)  &een SQT                       &een LS(COLON)  &een LS(QMARK)  &een GRAVE  &een LS(DQT)  &trans  &trans
&trans  &kp LPAR           &een LS(LT)   &kp LS(UNDER)  &een LS(GT)   &een COMMA                     &een SEMI       &een DOT        &een COMMA  &trans        &trans  &trans
&trans  &een LEFT_BRACKET  &kp LS(STAR)  &een FSLH      &een LS(AT)   &trans      &trans     &trans  &trans          &kp LS(EXCL)    &trans      &trans        &trans  &trans
                           &trans        &trans         &kp BSPC      &none       &kp RET    &trans  &trans          &trans          &trans      &trans
            >;

            label = "ru_sy";
        };

        NAVI {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &trans        &trans    &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_UP  &kp LS(HOME)  &kp UP    &kp LS(END)    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_DN  &kp LEFT      &kp DOWN  &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp LC(LEFT)  &none     &kp LC(RIGHT)  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans        &trans    &trans
            >;

            label = "NAVI";
        };

        adj {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &studio_unlock
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };

        nav {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4    &kp F5         &kp F6                     &kp F7           &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &kp HOME      &kp UP    &kp END        &kp INS                    &kp PG_UP        &kp N7  &kp N8  &kp N9   &trans   &trans
&trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &kp RET                    &kp PG_DN        &none   &none   &kp N6   &trans   &trans
&trans  &trans  &kp LC(LEFT)  &kp CAPS  &kp LC(RIGHT)  &kp DEL  &trans    &trans  &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3   &trans   &trans
                &trans        &trans    &trans         &trans   &trans    &trans  &mo 5            &trans  &kp N0  &trans
            >;

            display-name = "Navigation";
        };

        SCuts {
            bindings = <
&trans  &trans     &trans     &trans     &trans         &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &mkp MCLK  &mkp MB2   &mkp LCLK      &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &kp LS(LC(V))  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)      &kp LC(B)  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                   &trans     &trans     &trans         &trans     &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "SCuts";
        };

        kmrb {
            bindings = <
&none  &none  &none  &none  &none  &none                        &none      &kp LA(T)    &none       &kp LA(P)   &none  &none
&none  &none  &none  &none  &none  &none                        &none      &kp LA(N1)   &kp LG(UP)  &kp LA(N2)  &none  &none
&none  &none  &none  &none  &none  &none                        &none      &td2         &kp LA(M)   &td3        &none  &none
&none  &none  &none  &none  &none  &none  &none    &none        &none      &none        &none       &none       &none  &none
              &none  &none  &none  &none  &none    &kp LG(TAB)  &kp LG(D)  &kp LC(TAB)  &none       &none
            >;

            label = "kmrb";
        };

        GL_1 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &kp N6  &kp N7         &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                             &kp Y   &kp U          &kp I      &kp O    &kp P     &to 0
&kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G                             &kp H   &kp J          &kp K      &kp L    &kp SEMI  &trans
&kp LCTRL  &kp Z   &kp X   &kp C   &kp V   &kp B     &trans       &trans     &kp N   &kp M          &kp COMMA  &kp DOT  &trans    &trans
                   &trans  &trans  &mo 10  &kp LALT  &kp SPACE    &kp ENTER  &trans  &kp LG(SPACE)  &trans     &trans
            >;

            label = "GL_1";
        };

        GL_2 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp F6  &kp U   &kp I   &kp O   &kp P                     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &trans  &kp J   &kp K   &kp L   &trans                    &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&trans  &trans  &kp B   &kp N   &kp M   &trans  &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans
            >;

            label = "GL_2";
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "NUM";
        };
    };
};
